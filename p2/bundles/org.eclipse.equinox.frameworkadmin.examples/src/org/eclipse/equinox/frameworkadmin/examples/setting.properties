#########################################################
# setting for running this examples bundle.
#########################################################
#
# This bundle contains two kinds of examples using FrameworkAdmin.
# 1. examples showing how a Java program can configure and launch a framework by using FrameworkAdmin API. 
# 2. examples showing how a bundle running on a framework can configure and launch a framework (Equinox) by using FrameworkAdmin API. 

##################################################################
# 1. examples showing how a Java program can configure and launch a framework by using FrameworkAdmin API. 
#     (Main.class)
# main.mode=0: equinox with SimpleConfigurator.
# main.mode=1: knopflerfish with SimpleConfigurator.
# main.mode=2: felix without SimpleConfigurator.
#
# You can run them as a Java application from PDE(IDE). For it,
# required plugins need to be included in its classpath.

main.mode=0

main.equinox.frameworkAdminFactoryClassName=org.eclipse.equinox.frameworkadmin.equinox.internal.EquinoxFrameworkAdminFactoryImpl
main.knopflerfish.frameworkAdminFactoryClassName=org.eclipse.equinox.frameworkadmin.knopflerfish.internal.KfFrameworkAdminFactoryImpl
main.felix.frameworkAdminFactoryClassName=org.eclipse.equinox.frameworkadmin.felix.internal.FelixFrameworkAdminFactoryImpl
main.configuratorManipulatorFactoryClassName=org.eclipse.equinox.simpleconfigurator.manipulator.internal.SimpleConfiguratorManipulatorFactoryImpl

##################################################################
# 2. examples showing how a bundle running on a framework can configure and launch a framework (Equinox) by using FrameworkAdmin API. 
# 
# mode 0: without simpleconfigurator, config and launch Equinox.
# mode 1: with simpleconfigurator, config and launch Equinox.
# mode 2: without simpleconfigurator, config and launch Equinox by Eclipse.exe.
# mode 3: without simpleconfigurator, config and launch Knopflerfish.
#          telnet console is available on port 23 (userid admin, pwd admin)
#
# mode 4: with simpleconfigurator, config and launch Knopflerfish.
# mode 5: First, config for Knopflerfish and save them.
#         Then load them and convert loaded config to the one for Equinox.
#         Finally, launch Equinox.
# mode 6: without simpleconfigurator, config and launch Felix.
#         But telnet bundles doesn't seem to work properly...
# mode 7: without simpleconfigurator, config and save for Equinox.
#		  Then load them and expect BundlesState. 
# mode 8: with simpleconfigurator, config and launch Equinox.
# 		  Then load them with clean = true and expect BundlesState.  
# mode 9: with simpleconfigurator, config and launch Equinox and stop it.
# 		  Then load them with clean = false and expect BundlesState.  
#
#--------------------------------------------------------
# mode 100 & 101: get Manipulator representing the running framework
#		  and expect BundlesState of it. 

# To run this modes, you need to be careful extremely.
# First, set mode to 100 and export all bundle as an deployment plugins to the proper directory.
# Second, set mode to 101 and run from PDE.
#
# [CAUTION] If you export it with mode = 101 and run with mode 101, you might be in trouble.
#--------------------------------------------------------
mode=0

# you should export plugins and the following properties properly in advance.
#--------------------------------------------------------
jvm.location=C\:\\Java\\jre1.5.0_09\\bin\\java.exe
jvm.args=-Dms40
#--------------------------------------------------------
#For Equinox
equinox.fw.name=Equinox
equinox.fw.version=3.3
equinox.launcher.name=Eclipse.exe
equinox.launcher.version=3.2
# absolute path
equinox.launcher=C\:\\eclipse\\target\\eclipse\\eclipse.exe
equinox.home=C\:\\eclipse\\target\\eclipse
equinox.cwd=C\:\\eclipse\\target\\eclipse
# relative path from home
#equinox.fw=plugins\\org.eclipse.osgi_3.3.0.v20070208.jar
equinox.configLoc=configuration2
equinox.bundlesDir=plugins

equinox.console.port=9000
equinox.configLocForRunningTest=configuration3

#--------------------------------------------------------
# For Knopflerfish
knopflerfish.fw.name=Knopflerfish
knopflerfish.fw.version=2.0
knopflerfish.launcher.name=java -jar
knopflerfish.launcher.version=2.0
# absolute path
knopflerfish.home=C\:\\KF\\knopflerfish_osgi_2.0.0\\knopflerfish.org\\osgi
knopflerfish.cwd=C\:\\KF\\knopflerfish_osgi_2.0.0\\knopflerfish.org\\osgi
# relative path from home
knopflerfish.fw=framework.jar
knopflerfish.configLoc=tmp\\init.xargs
knopflerfish.fwPersistentDataLoc=fwdir
knopflerfish.bundlesDir=jars
# relative path from bundleDir
knopflerfish.bundles.1.start=log/log_all-2.0.0.jar,cm/cm_all-2.0.0.jar,console/console_all-2.0.0.jar,component/component_all-2.0.0.jar,event/event_all-2.0.0.jar
knopflerfish.bundles.2.start=util/util-2.0.0.jar,crimson/crimson-2.0.0.jar,jsdk/jsdk-2.2.jar,bundlerepository/bundlerepository_all-2.0.0.jar
knopflerfish.bundles.3.start=device/device_all-2.0.0.jar,useradmin/useradmin_all-2.0.0.jar
knopflerfish.bundles.4.start=http/http_all-2.0.0.jar
knopflerfish.bundles.5.start=frameworkcommands/frameworkcommands-2.0.0.jar,logcommands/logcommands-2.0.0.jar,cm_cmd/cm_cmd-2.0.0.jar,consoletty/consoletty-2.0.0.jar,consoletelnet/consoletelnet-2.0.0.jar
knopflerfish.bundles.6.start=httproot/httproot-2.0.0.jar

#--------------------------------------------------------
# For Felix
felix.fw.name=Felix
felix.fw.version=0.8.0.SNAPSHOT
felix.launcher.name=java -jar
felix.launcher.version=0.8.0.SNAPSHOT
# absolute path
felix.home=C\:\\FelixWorkspace\\trunk\\main
felix.cwd=C\:\\FelixWorkspace\\trunk\\main
# relative path from home
felix.fw=bin\\felix.jar
felix.configLoc=conf2
felix.fwPersistentDataLoc=fwdir
felix.bundlesDir=bundle
# relative path from bundleDir
felix.bundles.1.start=org.apache.felix.shell-0.8.0-SNAPSHOT.jar,org.apache.felix.shell.tui-0.8.0-SNAPSHOT.jar
felix.bundles.2.start=org.apache.felix.bundlerepository-0.8.0-SNAPSHOT.jar,telnetd.jar
