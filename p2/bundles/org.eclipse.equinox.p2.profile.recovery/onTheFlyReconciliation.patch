### Eclipse Workspace Patch 1.0
#P org.eclipse.equinox.p2.engine
Index: plugin.xml
===================================================================
RCS file: /cvsroot/eclipse/equinox-incubator/provisioning/org.eclipse.equinox.p2.engine/plugin.xml,v
retrieving revision 1.2
diff -u -r1.2 plugin.xml
--- plugin.xml	30 Sep 2007 18:55:52 -0000	1.2
+++ plugin.xml	7 Dec 2007 02:33:20 -0000
@@ -3,6 +3,7 @@
 		id="touchpoints" 
 		name="Touchpoints" 
 		schema="schema/touchpoints.exsd"/>
+<extension-point id="selfProducer" name="self profile producer" schema="schema/selfProducer.exsd"/>
 		
 	<extension point="org.eclipse.equinox.p2.engine.touchpoints" id="null" name="Null Touchpoint">
 		<touchpoint 
Index: src/org/eclipse/equinox/internal/p2/engine/SimpleProfileRegistry.java
===================================================================
RCS file: /cvsroot/eclipse/equinox-incubator/provisioning/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/SimpleProfileRegistry.java,v
retrieving revision 1.4
diff -u -r1.4 SimpleProfileRegistry.java
--- src/org/eclipse/equinox/internal/p2/engine/SimpleProfileRegistry.java	28 Nov 2007 21:53:57 -0000	1.4
+++ src/org/eclipse/equinox/internal/p2/engine/SimpleProfileRegistry.java	7 Dec 2007 02:33:20 -0000
@@ -14,8 +14,7 @@
 import java.util.LinkedHashMap;
 import java.util.Map;
 import javax.xml.parsers.ParserConfigurationException;
-import org.eclipse.core.runtime.IStatus;
-import org.eclipse.core.runtime.Status;
+import org.eclipse.core.runtime.*;
 import org.eclipse.equinox.internal.p2.core.helpers.*;
 import org.eclipse.equinox.internal.p2.persistence.XMLWriter;
 import org.eclipse.equinox.p2.core.eventbus.ProvisioningEventBus;
@@ -29,8 +28,8 @@
 import org.xml.sax.*;
 
 public class SimpleProfileRegistry implements IProfileRegistry {
-	private static String STORAGE = "profileRegistry.xml"; //$NON-NLS-1$
-
+	private static final String STORAGE = "profileRegistry.xml"; //$NON-NLS-1$
+	private static final String PROFILE_PRODUCER_XP = EngineActivator.ID + ".selfProducer"; //$NON-NLS-1$
 	/**
 	 * Map of String(Profile id)->Profile. 
 	 */
@@ -46,12 +45,31 @@
 		updateRoamingProfile();
 	}
 
+	private void spoofUpSelf() {
+		IConfigurationElement[] elts = RegistryFactory.getRegistry().getConfigurationElementsFor(PROFILE_PRODUCER_XP);
+		for (int i = 0; i < elts.length; i++) {
+			try {
+				SelfProfileProducer pp = (SelfProfileProducer) elts[i].createExecutableExtension("class"); //$NON-NLS-1$
+				Profile created = null;
+				if (self == null) {
+					created = pp.produce(null);
+					self = created.getProfileId();
+				} else
+					created = pp.produce(new Profile(self));
+				addProfile(created);
+				pp.fill(created);
+			} catch (CoreException e) {
+				e.printStackTrace();
+			}
+		}
+	}
+
 	/**
 	 * If the current profile for self is marked as a roaming profile, we need
 	 * to update its install and bundle pool locations.
 	 */
 	private void updateRoamingProfile() {
-		Profile selfProfile = getProfile(SELF);
+		Profile selfProfile = basicGetProfile(SELF);
 		if (selfProfile == null)
 			return;
 		//only update if self is a roaming profile
@@ -77,6 +95,17 @@
 	}
 
 	public Profile getProfile(String id) {
+		Profile result = basicGetProfile(id);
+		if (result != null)
+			return result;
+		if (SELF.equals(id)) {
+			id = self;
+			spoofUpSelf();
+		}
+		return basicGetProfile(id);
+	}
+
+	private Profile basicGetProfile(String id) {
 		if (SELF.equals(id))
 			id = self;
 		return (Profile) profiles.get(id);
@@ -90,7 +119,7 @@
 		if (isNamedSelf(toAdd))
 			throw new IllegalArgumentException(NLS.bind(Messages.Profile_Not_Named_Self, toAdd.getProfileId()));
 		String id = toAdd.getProfileId();
-		if (getProfile(id) == null) {
+		if (basicGetProfile(id) == null) {
 			profiles.put(id, toAdd);
 		} else
 			throw new IllegalArgumentException(NLS.bind(Messages.Profile_Duplicate_Root_Profile_Id, id));
Index: src/org/eclipse/equinox/p2/engine/SelfProfileProducer.java
===================================================================
RCS file: src/org/eclipse/equinox/p2/engine/SelfProfileProducer.java
diff -N src/org/eclipse/equinox/p2/engine/SelfProfileProducer.java
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ src/org/eclipse/equinox/p2/engine/SelfProfileProducer.java	1 Jan 1970 00:00:00 -0000
@@ -0,0 +1,15 @@
+/*******************************************************************************
+ * Copyright (c) 2007 IBM Corporation and others. All rights reserved. This
+ * program and the accompanying materials are made available under the terms of
+ * the Eclipse Public License v1.0 which accompanies this distribution, and is
+ * available at http://www.eclipse.org/legal/epl-v10.html
+ * 
+ * Contributors: IBM Corporation - initial API and implementation
+ ******************************************************************************/
+package org.eclipse.equinox.p2.engine;
+
+public interface SelfProfileProducer {
+	public Profile produce(Profile p);
+
+	public void fill(Profile p);
+}
Index: schema/selfProducer.exsd
===================================================================
RCS file: schema/selfProducer.exsd
diff -N schema/selfProducer.exsd
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ schema/selfProducer.exsd	1 Jan 1970 00:00:00 -0000
@@ -0,0 +1,79 @@
+<?xml version='1.0' encoding='UTF-8'?>
+<!-- Schema file written by PDE -->
+<schema targetNamespace="org.eclipse.equinox.p2.engine">
+<annotation>
+      <appInfo>
+         <meta.schema plugin="org.eclipse.equinox.p2.engine" id="selfProducer" name="self profile producer"/>
+      </appInfo>
+      <documentation>
+         [Enter description of this extension point.]
+      </documentation>
+   </annotation>
+
+   <element name="extension">
+      <complexType>
+         <attribute name="point" type="string" use="required">
+            <annotation>
+               <documentation>
+                  
+               </documentation>
+            </annotation>
+         </attribute>
+         <attribute name="id" type="string">
+            <annotation>
+               <documentation>
+                  
+               </documentation>
+            </annotation>
+         </attribute>
+         <attribute name="name" type="string">
+            <annotation>
+               <documentation>
+                  
+               </documentation>
+               <appInfo>
+                  <meta.attribute translatable="true"/>
+               </appInfo>
+            </annotation>
+         </attribute>
+      </complexType>
+   </element>
+
+   <annotation>
+      <appInfo>
+         <meta.section type="since"/>
+      </appInfo>
+      <documentation>
+         [Enter the first release in which this extension point appears.]
+      </documentation>
+   </annotation>
+
+   <annotation>
+      <appInfo>
+         <meta.section type="examples"/>
+      </appInfo>
+      <documentation>
+         [Enter extension point usage example here.]
+      </documentation>
+   </annotation>
+
+   <annotation>
+      <appInfo>
+         <meta.section type="apiInfo"/>
+      </appInfo>
+      <documentation>
+         [Enter API information here.]
+      </documentation>
+   </annotation>
+
+   <annotation>
+      <appInfo>
+         <meta.section type="implementation"/>
+      </appInfo>
+      <documentation>
+         [Enter information about supplied implementation of this extension point.]
+      </documentation>
+   </annotation>
+
+
+</schema>
